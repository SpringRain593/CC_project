[tool.poetry]
name = "cloud-file-system-backend"
version = "0.1.0"
description = "A cloud-based file management system with user authentication and role-based access control"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.12"
uvicorn = {extras = ["standard"], version = "0.34.2"}
asyncpg = "^0.30.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}
alembic = "^1.12.1"
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
passlib = {extras = ["bcrypt"], version = "1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.20"
boto3 = "^1.34.0"
botocore = "^1.34.0"
google-auth = "^2.25.2"
google-auth-oauthlib = "^1.2.0"
httpx = "^0.28.0"
aiosqlite = "^0.21.0"        # Add this for SQLite support
psycopg2-binary = "^2.9.10"
pymysql = "^1.1.1"
google-cloud-storage = "^3.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^1.0.0"
pytest-cov = "^6.1.0"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.2.0"
mypy = "^1.7.1"
pre-commit = "^4.1.0"
httpx = "^0.28.0"

[tool.poetry.group.test.dependencies]
pytest-mock = "^3.12.0"
factory-boy = "^3.3.0"
freezegun = "^1.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=app --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]